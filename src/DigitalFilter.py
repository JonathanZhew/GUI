'''
Created on May 10, 2018

@author: zhenfengzhao
'''
import numpy as np 
#window Kaiser Sample rate 1 Hz Cutoff 0.01 Hz Transition bandwidth 0.2Hz Stopband attenuation 30dB
h2 = [
    0.060631488607569922,
    0.094635140688965044,
    0.124318549416508606,
    0.144551101267571452,
    0.151727440038769812,
    0.144551101267571452,
    0.124318549416508606,
    0.094635140688965044,
    0.060631488607569922,
]

#window hamming 0.01 /0.1 /1
h = [
    0.004321734446567168,
    0.004964181359029018,
    0.006726853024102915,
    0.009590710694428429,
    0.013477194377763563,
    0.018250807495402411,
    0.023724953403477973,
    0.029670748540558761,
    0.035828357100486319,
    0.041920237367045872,
    0.047665569920356123,
    0.052795060488147479,
    0.057065280347479520,
    0.060271727052549448,
    0.062259856977999038,
    0.062933454809211808,
    0.062259856977999038,
    0.060271727052549441,
    0.057065280347479527,
    0.052795060488147492,
    0.047665569920356143,
    0.041920237367045886,
    0.035828357100486347,
    0.029670748540558775,
    0.023724953403477980,
    0.018250807495402411,
    0.013477194377763560,
    0.009590710694428432,
    0.006726853024102912,
    0.004964181359029018,
    0.004321734446567168,
]

class KaiserFilter:
    def __init__(self):
        self.len = len(h)
        self.dat = np.zeros(self.len)
      
    def conv(self, value): 
        self.dat = np.roll(self.dat, -1) 
        self.dat[self.len-1] = value
        y = np.convolve(self.dat, h2, 'valid')  
        return y[0]
        
        